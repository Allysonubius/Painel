{"remainingRequest":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\src\\components\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\src\\components\\Map.vue","mtime":1590605624623},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIHByb3BzOiB7CiAgICAgICAgbG9jYXRpb25zRGF0YToge30sCiAgICAgICAgY291bnRyeU5hbWU6IFN0cmluZywKICAgICAgICBpc1JhdGU6IEJvb2xlYW4KICAgIH0sCiAgICBkYXRhOiBmdW5jdGlvbigpewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHJlbmRlckNvbXBvbmVudDogdHJ1ZQogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgICAgICBtYXBPcHRpb25zOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBsZXQgaXNVSyA9IHRoaXMuY291bnRyeU5hbWUgPT09ICJVSyIgfHwgdGhpcy5jb3VudHJ5TmFtZSA9PT0gIlVTIjsKICAgICAgICAgICAgICAgIGxldCBvcHRpb25zID0gewogICAgICAgICAgICAgICAgICAgIGNoYXJ0OiB7CiAgICAgICAgICAgICAgICAgICAgICAgIG1hcDogdGhpcy5jb3VudHJ5TmFtZSwKICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA1MDAKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICIiCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRleHQ6IHRoaXMuY291bnRyeU5hbWVbMF0udG9VcHBlckNhc2UoKSArIHRoaXMuY291bnRyeU5hbWUuc2xpY2UoMSkgKyAiIENvbmZpcm1lZCBDYXNlcyIKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG1hcE5hdmlnYXRpb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlZDogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlRG91YmxlQ2xpY2tab29tVG86IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgIGJ1dHRvbk9wdGlvbnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduVG86ICdzcGFjaW5nQm94JwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBjb2xvckF4aXM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgZW5hYmxlczogdHJ1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgbWluOiAwCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6ICdDYXNlcycsCiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRlczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgaG92ZXI6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyNCQURBNTUnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFMYWJlbHM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVuYWJsZWQ6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9ybWF0OiAne3BvaW50Lm5hbWV9JwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBhbGxBcmVhczogaXNVSywKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogdGhpcy5sb2NhdGlvbnNEYXRhCiAgICAgICAgICAgICAgICAgICAgfV0sCiAgICAgICAgICAgICAgICAgICAgdG9vbHRpcDoge30sCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgaWYodGhpcy5pc1JhdGUpCiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy50b29sdGlwLnBvaW50Rm9ybWF0ID0gJ3twb2ludC5uYW1lfTogPGI+e3BvaW50LnZhbHVlOi4yZn08L2I+PGJyLz4nCiAgICAgICAgICAgICAgICByZXR1cm4gb3B0aW9uczsKICAgICAgICAgICAgfQogICAgfSwKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2codGhpcy5sb2NhdGlvbnNEYXRhKTsKICAgICAgICAvLyBpZih0aGlzLmNvdW50cnlOYW1lID09PSAid29ybGQiKQogICAgICAgIC8vICAgICB0aGlzLm1hcE9wdGlvbnMudGl0bGUKICAgIH0KfQo="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Map.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div v-if=\"renderComponent\">\r\n        <highcharts :constructor-type=\"'mapChart'\" :options=\"mapOptions\" class=\"map\"></highcharts>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        props: {\r\n            locationsData: {},\r\n            countryName: String,\r\n            isRate: Boolean\r\n        },\r\n        data: function(){\r\n            return {\r\n                renderComponent: true\r\n            }\r\n        },\r\n        computed: {\r\n                mapOptions: function () {\r\n                    let isUK = this.countryName === \"UK\" || this.countryName === \"US\";\r\n                    let options = {\r\n                        chart: {\r\n                            map: this.countryName,\r\n                            height: 500\r\n                        },\r\n                        title: {\r\n                            text: \"\"\r\n                            // text: this.countryName[0].toUpperCase() + this.countryName.slice(1) + \" Confirmed Cases\"\r\n                        },\r\n                        mapNavigation: {\r\n                            enabled: true,\r\n                            enableDoubleClickZoomTo: true,\r\n                            buttonOptions: {\r\n                                alignTo: 'spacingBox'\r\n                            }\r\n                        },\r\n                        colorAxis: {\r\n                            enables: true,\r\n                            min: 0\r\n                        },\r\n                        series: [{\r\n                            name: 'Cases',\r\n                            states: {\r\n                                hover: {\r\n                                    color: '#BADA55'\r\n                                }\r\n                            },\r\n                            dataLabels: {\r\n                                enabled: false,\r\n                                format: '{point.name}'\r\n                            },\r\n                            allAreas: isUK,\r\n                            data: this.locationsData\r\n                        }],\r\n                        tooltip: {},\r\n                    };\r\n                    if(this.isRate)\r\n                        options.tooltip.pointFormat = '{point.name}: <b>{point.value:.2f}</b><br/>'\r\n                    return options;\r\n                }\r\n        },\r\n        mounted() {\r\n            // console.log(this.locationsData);\r\n            // if(this.countryName === \"world\")\r\n            //     this.mapOptions.title\r\n        }\r\n    }\r\n</script>\r\n<style scoped>\r\n    .map {\r\n        min-height: 300px;\r\n    }\r\n</style>\r\n"]}]}