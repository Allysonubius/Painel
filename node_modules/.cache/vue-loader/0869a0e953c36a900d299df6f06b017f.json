{"remainingRequest":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\allys\\Documents\\GIT\\Painel\\src\\components\\NearbyCasesFinder.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\src\\components\\NearbyCasesFinder.vue","mtime":1590605624630},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NearbyCasesFinder.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"NearbyCasesFinder.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div>\r\n        <div style=\"display: flex;align-items: center;margin-bottom: 20px; \">\r\n\r\n            <button type=\"button\" class=\"btn btn-secondary btn-lg circle\" @click=\"locateUserGPS\">\r\n                <div style=\"margin-top: -2px;\"><LocateIcon/></div>\r\n            </button>\r\n\r\n            <div  style=\"margin: 0 20px;width: 100%;\">\r\n                <input v-if=\"currentCountry==='UK'\" class=\"form-control\" id=\"postcode\" placeholder=\"UK Postcode\" v-model=\"inputValue\">\r\n                <vSelect v-else-if=\"mainLocation\" class=\"select\" :clearable=\"false\" :value=\"usDropdownValue\" :options=\"mainLocation\" label=\"Combined_Key\"\r\n                         @input=\"findUSCounty\" placeholder=\"Search...\"></vSelect>\r\n                <div v-else style=\"text-align: center\">Loading...</div>\r\n            </div>\r\n\r\n            <button type=\"submit\" class=\"btn btn-primary\" style=\"width: 100px;\" @click=\"findUKPostcode\">{{$t('nearBy.search')}}</button>\r\n\r\n        </div>\r\n        <div v-if=\"displayInfo===$t('nearBy.locating')\" style=\"margin: 5px;text-align: center;\">\r\n            <div class=\"spinner-border text-primary\" style=\"width: 2rem; height: 2rem;\" role=\"status\">\r\n                <span class=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"displayInfo\" style=\"text-align: center;\" v-html=\"displayInfo\"></div>\r\n\r\n        <div v-if=\"isResult\" style=\"text-align: center;margin-top: 20px; color: silver;\">\r\n            <a href=\"javascript: void(0)\" v-if=\"currentCountry==='US'\" @click=\"switchStateCounty\">{{$t('nearBy.switchCountyState')}}<br></a>\r\n            <a href=\"#regionData\">{{$t('nearBy.goToRegional')}}</a>\r\n            <div v-if=\"$i18n.locale !== 'zh'\">\r\n                <hr>\r\n                <ShareIcons style=\"margin-top: 20px;\" :title=\"displayInfo\"></ShareIcons>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    import LocateIcon from 'mdi-vue/NearMe'\r\n    import ShareIcons from \"./ShareIcons.vue\";\r\n    import vSelect from 'vue-select'\r\n    const getGetOrdinal = function(n) {\r\n        //ref https://community.shopify.com/c/Shopify-Design/Ordinal-Number-in-javascript-1st-2nd-3rd-4th/td-p/72156\r\n        const s=[\"th\",\"st\",\"nd\",\"rd\"],\r\n            v=n%100;\r\n        return n+(s[(v-20)%10]||s[v]||s[0]);\r\n    };\r\n\r\n    export default {\r\n        name: \"NearbyCasesFinder\",\r\n        props: [\"regionData\", \"currentCountry\"],\r\n        components:{\r\n            LocateIcon,\r\n            ShareIcons,\r\n            vSelect\r\n        },\r\n        data: function(){\r\n            return {\r\n                inputValue: \"\",\r\n                displayInfo: \"<div style='opacity: 0.7; font-size: 14px;'>\" + (this.currentCountry===\"UK\"?this.$t('nearBy.ukDefault'):this.$t('nearBy.usDefault')) +\"</div>\",\r\n                mainLocation: null,\r\n                statesLocation: null,\r\n                usInfo: {\r\n                    county: null,\r\n                    state: null\r\n                },\r\n                isResult: false,\r\n                usDropdownValue: null\r\n            }\r\n        },\r\n        methods:{\r\n            findUKPostcode(){\r\n                this.isResult = false;\r\n                window.ga('send', 'event', \"nearby\", \"postcode\", this.inputValue);\r\n                fetch(\"https://api.postcodes.io/postcodes/\"+this.inputValue).then( async (res) => {\r\n                    let data = await res.json();\r\n                    console.log(data);\r\n\r\n                    if(data.status == 200){\r\n                        this.findByUKRegionName(data.result.nhs_ha, data.result.admin_district)\r\n\r\n                    }else {\r\n                        window.ga('send', 'event', \"nearby\", \"uk-postcode-notfound\", this.inputValue);\r\n                        this.displayInfo = this.$t('nearBy.postcodeErr')\r\n                    }\r\n                })\r\n            },\r\n            findByUKRegionName(regionName, district){\r\n                let res = this.regionData.filter(obj => obj.location == regionName || obj.location == district);\r\n                if(res && res[0]) {\r\n                    let location = res[0];\r\n                    let index = this.regionData.findIndex(obj=> obj.id === location.id);\r\n                    this.displayInfo = this.$t('nearBy.ukResult', [location.location, location.number, location.change, getGetOrdinal(index)])\r\n                    window.ga('send', 'event', \"nearby\", \"uk-region-found\", location.location+\", \"+regionName + \", \"+ district);\r\n                    this.isResult = true;\r\n                }else {\r\n                    this.displayInfo = this.$t('nearBy.notFound', [regionName]);\r\n                    window.ga('send', 'event', \"nearby\", \"uk-region-notfound\", regionName + \", \"+ district);\r\n                }\r\n            },\r\n            locateUserGPS(){\r\n                this.isResult = false;\r\n                window.ga('send', 'event', \"nearby\", \"start-locating\", \"\");\r\n                if (navigator.geolocation) {\r\n                    this.displayInfo = this.$t('nearBy.locating');\r\n                    navigator.geolocation.getCurrentPosition(async (position)=>{\r\n                        window.ga('send', 'event', \"nearby\", \"location-found\", \"\");\r\n                        if(this.currentCountry === \"UK\"){\r\n                            this.getUKPostcodeUsingLocation(position);\r\n                        }else {\r\n                            await this.getUSLocationData();\r\n                            this.calculateDistanceFromLocation(position);\r\n                        }\r\n                    },()=>{\r\n                        window.ga('send', 'event', \"nearby\", \"location-rejected\", \"\");\r\n                        this.displayInfo = this.$t('nearBy.rejected');\r\n                    });\r\n                } else {\r\n                    window.ga('send', 'event', \"nearby\", \"location-unsupported\", \"\");\r\n                    this.displayInfo = this.$t('nearBy.unsupported');\r\n                }\r\n\r\n            },\r\n            getUKPostcodeUsingLocation(position){\r\n                let requestUrl = `https://api.postcodes.io/postcodes?lon=${position.coords.longitude}&lat=${position.coords.latitude}`;\r\n                fetch(requestUrl).then( async res=>{\r\n                    window.ga('send', 'event', \"nearby\", \"location-found\", requestUrl);\r\n                    let data = await res.json();\r\n                    if(data.result && data.result[0]){\r\n                        this.inputValue = data.result[0].postcode;\r\n                        window.ga('send', 'event', \"nearby\", \"uk-postcode-found\", this.inputValue );\r\n                        this.findUKPostcode()\r\n                    }else {\r\n                        window.ga('send', 'event', \"nearby\", \"location-invalid\", requestUrl);\r\n                        this.displayInfo = this.$t('nearBy.notUk');\r\n                    }\r\n                })\r\n            },\r\n            async getUSLocationData(){\r\n                return new Promise((resolve => {\r\n                    if(this.mainLocation) {\r\n                        resolve(this.mainLocation);\r\n                        return;\r\n                    }\r\n                    fetch(`https://henryz.cc/projects/covid/api_current.php`).then( async res=>{\r\n                        let data = await res.json();\r\n                        const csv=require('csvtojson');\r\n                        let json = await csv().fromString(data.global);\r\n                        let usStates = await csv().fromString(data.us);\r\n                        console.log(json, usStates);\r\n                        this.mainLocation = json.filter(ele=>ele.Country_Region===\"US\");\r\n                        this.statesLocation = usStates.sort((a, b) => b.Active - a.Active);\r\n                        resolve(json);\r\n                    })\r\n                }))\r\n            },\r\n            calculateDistanceFromLocation(position){\r\n                const calculateDist = (lat1, lon1, lat2, lon2) => {\r\n                    let p = 0.017453292519943295;    // Math.PI / 180\r\n                    let c = Math.cos;\r\n                    let a = 0.5 - c((lat2 - lat1) * p)/2 +\r\n                        c(lat1 * p) * c(lat2 * p) *\r\n                        (1 - c((lon2 - lon1) * p))/2;\r\n\r\n                    return 12742 * Math.asin(Math.sqrt(a)); // 2 * R; R = 6371 km\r\n                };\r\n\r\n                const getClosest = (inputList)=>{\r\n                    let list = inputList.sort((a, b) => b.Active - a.Active);\r\n                    let min = {distance: Infinity};\r\n                    for(let region of list){\r\n                        region.distance = calculateDist(region[\"Lat\"],region[\"Long_\"],position.coords.latitude, position.coords.longitude);\r\n                        if(region.distance < min.distance){\r\n                            min = region;\r\n                        }\r\n                    }\r\n                    min.idx = list.findIndex(ele=>ele===min) + 1;\r\n                    console.log(list,min);\r\n\r\n                    if(min.Testing_Rate){\r\n                        let tRateList = list.sort((a, b) => b.Testing_Rate - a.Testing_Rate);\r\n                        min.tRateRank = tRateList.findIndex(ele=>ele.UID===min.UID) + 1;\r\n                    }\r\n                    return min;\r\n                };\r\n\r\n                let usCounties = this.mainLocation;\r\n                let cmin = getClosest(usCounties); // county min\r\n                let smin = getClosest(this.statesLocation); // state min\r\n\r\n                if(cmin.distance> 500){\r\n                    this.displayInfo = this.$t('nearBy.notUs');\r\n                    window.ga('send', 'event', \"nearby\", \"not-us\", cmin.Combined_Key+ \" - \" +cmin.distance);\r\n                    return;\r\n                }\r\n\r\n                window.ga('send', 'event', \"nearby\", \"us-county-found\", cmin.Combined_Key);\r\n\r\n                this.usDropdownValue = cmin.Combined_Key;\r\n\r\n                this.usInfo.county = this.$t('nearBy.usResult',\r\n                    [cmin.Combined_Key, cmin.Active, cmin.Confirmed, cmin.Deaths, (cmin.Deaths/cmin.Confirmed*100).toFixed(2),\r\n                        cmin.Recovered!=0?cmin.Recovered:\"-\", cmin.Recovered!=0?(cmin.Recovered/cmin.Confirmed*100).toFixed(2):\"-\", getGetOrdinal(cmin.idx)])\r\n                this.usInfo.state = this.$t('nearBy.usStateResult',\r\n                    [smin.Province_State, smin.People_Tested, (Number(smin.Testing_Rate)/1000).toFixed(2), smin.Confirmed, smin.People_Hospitalized?smin.People_Hospitalized:\"-\",\r\n                        Number(smin.Hospitalization_Rate).toFixed(2), smin.Deaths, Number(smin.Mortality_Rate).toFixed(2), smin.Recovered?smin.Recovered:\"-\", Number(smin.Active).toFixed(0), getGetOrdinal(smin.idx),\r\n                        getGetOrdinal(smin.tRateRank) ])\r\n\r\n                this.displayInfo = this.usInfo.county;\r\n                this.isResult = true;\r\n            },\r\n            findUSCounty(e){\r\n                window.ga('send', 'event', \"nearby\", \"us-county-dropdown\", e.Combined_Key);\r\n                this.usDropdownValue = e;\r\n                let postition = {\r\n                    coords:{\r\n                        latitude: e[\"Lat\"],\r\n                        longitude: e[\"Long_\"]\r\n                    }\r\n                };\r\n                this.calculateDistanceFromLocation(postition);\r\n            },\r\n            switchStateCounty(){\r\n                window.ga('send', 'event', \"nearby\", \"us-county-state-switched\", '');\r\n                if(this.displayInfo == this.usInfo.county){\r\n                    this.displayInfo = this.usInfo.state;\r\n                }else {\r\n                    this.displayInfo = this.usInfo.county;\r\n                }\r\n            }\r\n        },\r\n        mounted() {\r\n            if(this.currentCountry === \"US\")\r\n                this.getUSLocationData()\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .displayInfo > span{\r\n        color: darkred;\r\n        padding: 0 5px;\r\n        font-weight: bolder;\r\n    }\r\n</style>"]}]}