{"remainingRequest":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\allys\\Documents\\GIT\\Painel\\src\\components\\CountryCompareSection.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\src\\components\\CountryCompareSection.vue","mtime":1590605624613},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVBcGV4Q2hhcnRzIGZyb20gInZ1ZS1hcGV4Y2hhcnRzIjsKaW1wb3J0IHZTZWxlY3QgZnJvbSAndnVlLXNlbGVjdCcKaW1wb3J0IERhdGFTd2l0Y2ggZnJvbSAnLi9EYXRhU3dpdGNoJzsKaW1wb3J0IHsKICAgIGdldENvdW50cnlDb21wYXJlRGF0YQp9IGZyb20gIi4uL2pzL2xvY2F0aW9uVXRpbHMiCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJDb3VudHJ5Q29tcGFyZVNlY3Rpb24iLAogICAgcHJvcHM6IFsiZ2xvYmFsRGF0YSIsICJjb3VudHJ5TGlzdCJdLAogICAgY29tcG9uZW50czp7CiAgICAgICAgVnVlQXBleENoYXJ0cywKICAgICAgICB2U2VsZWN0LAogICAgICAgIERhdGFTd2l0Y2gKICAgIH0sCiAgICBkYXRhOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY291bnRyeUxpc3RGaWx0ZXJlZDogW10sCiAgICAgICAgICAgIHNlbGVjdGVkQ291bnRyaWVzOiBbIlVuaXRlZCBLaW5nZG9tIiwgIlNwYWluIiwgIkZyYW5jZSIsICJJdGFseSIsICJHZXJtYW55Il0sCiAgICAgICAgICAgIGRhdGVzOiBudWxsLAogICAgICAgICAgICBkYXRhVHlwZTogImNvbmZpcm1lZCIsCiAgICAgICAgICAgIHNlcmllczogbnVsbAogICAgICAgIH0KICAgIH0sCiAgICBtb3VudGVkKCl7CiAgICAgICAgaWYoIXdpbmRvdy5jYWxjdWxhdGVkQ291bnRyeURhdGEpewogICAgICAgICAgICB3aW5kb3cuY2FsY3VsYXRlZENvdW50cnlEYXRhID0ge30KICAgICAgICB9CiAgICAgICAgdGhpcy5jb3VudHJ5TGlzdEZpbHRlcmVkID0gdGhpcy5jb3VudHJ5TGlzdC5zbGljZSgzKTsKICAgICAgICB0aGlzLmdldFNlcmllcygpOwogICAgfSwKICAgIHdhdGNoOnsKICAgICAgc2VsZWN0ZWRDb3VudHJpZXM6ZnVuY3Rpb24gKCkgewogICAgICAgICAgdGhpcy5nZXRTZXJpZXMoKTsKICAgICAgICAgIHdpbmRvdy5nYSgnc2VuZCcsICdldmVudCcsICJjb21wYXJlIiwgImNvdW50cmllcy1sb2FkZWQiLCB0aGlzLnNlbGVjdGVkQ291bnRyaWVzLnRvU3RyaW5nKCkpOwogICAgICB9LAogICAgICBkYXRhVHlwZTpmdW5jdGlvbiAoKSB7CiAgICAgICAgICB0aGlzLmdldFNlcmllcygpOwogICAgICAgICAgd2luZG93LmdhKCdzZW5kJywgJ2V2ZW50JywgImNvbXBhcmUiLCAidHlwZS1jaGFuZ2VkIiwgdGhpcy5kYXRhVHlwZSk7CiAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOnsKICAgICAgICBnZXRTZXJpZXM6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaWYodGhpcy5zZWxlY3RlZENvdW50cmllcy5sZW5ndGg9PT0wKSByZXR1cm4gW107CiAgICAgICAgICAgIGxldCBkYXRhID0gdGhpcy5zZWxlY3RlZENvdW50cmllcy5tYXAoY291bnRyeT0+ewogICAgICAgICAgICAgICAgbGV0IGNvdW50cnlEYXRhOwogICAgICAgICAgICAgICAgaWYod2luZG93LmNhbGN1bGF0ZWRDb3VudHJ5RGF0YVtjb3VudHJ5XSl7CiAgICAgICAgICAgICAgICAgICAgY291bnRyeURhdGEgPSB3aW5kb3cuY2FsY3VsYXRlZENvdW50cnlEYXRhW2NvdW50cnldCiAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICBjb3VudHJ5RGF0YSA9IGdldENvdW50cnlDb21wYXJlRGF0YSh0aGlzLmdsb2JhbERhdGEsIGNvdW50cnksIDUwKTsKICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY2FsY3VsYXRlZENvdW50cnlEYXRhW2NvdW50cnldID0gY291bnRyeURhdGEKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgICAgbmFtZTogY291bnRyeSwKICAgICAgICAgICAgICAgICAgICBkYXRhOiBjb3VudHJ5RGF0YT8ubWFwKGEgPT4gewogICAgICAgICAgICAgICAgICAgICAgICBpZih0aGlzLmRhdGFUeXBlPT09ImFjdGl2ZSIpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhLmNvbmZpcm1lZCAtIGEuZGVhdGggLSBhLmN1cmVkOwogICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZSBpZih0aGlzLmRhdGFUeXBlPT09ImRSYXRlIil7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGEuZGVhdGggLyBhLmNvbmZpcm1lZCkudG9QcmVjaXNpb24oMik7CiAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlIGlmKHRoaXMuZGF0YVR5cGU9PT0iY1JhdGUiKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoYS5jdXJlZCAvIGEuY29uZmlybWVkKS50b1ByZWNpc2lvbigyKTsKICAgICAgICAgICAgICAgICAgICAgICAgfWVsc2UgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFbdGhpcy5kYXRhVHlwZV07CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfX0pOwogICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgICAgICAgbGV0IG1heExlbiA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIGRhdGEubWFwKGEgPT4gYS5kYXRhLmxlbmd0aCkpOwogICAgICAgICAgICBsZXQgZGF0ZUFyciA9IEFycmF5LmZyb20oQXJyYXkobWF4TGVuKS5rZXlzKCkpOwogICAgICAgICAgICAvLyByZWYgaHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMzc0NjcyNS8KICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHZ1ZS9uby1zaWRlLWVmZmVjdHMtaW4tY29tcHV0ZWQtcHJvcGVydGllcwogICAgICAgICAgICB0aGlzLmRhdGVzID0gZGF0ZUFyci5tYXAoKGQpID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiAiRCIgKyBkOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgdGhpcy5zZXJpZXMgPSBkYXRhOwogICAgICAgIH0sCiAgICB9LAogICAgY29tcHV0ZWQ6ewogICAgICAgIG9wdGlvbnM6ZnVuY3Rpb24gKCkgeyByZXR1cm4gIHsKICAgICAgICAgICAgY2hhcnQ6IHsKICAgICAgICAgICAgICAgIGlkOiAiY2MiLAogICAgICAgICAgICAgICAgaGVpZ2h0OiAzMjAsCiAgICAgICAgICAgICAgICB0eXBlOiAibGluZSIsCiAgICAgICAgICAgICAgICBzdGFja2VkOiBmYWxzZSwKICAgICAgICAgICAgICAgIHpvb206IHsKICAgICAgICAgICAgICAgICAgICBlbmFibGVkOiB3aW5kb3cuaW5uZXJXaWR0aCA+IDgwMAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICB0b29sdGlwOnsKICAgICAgICAgICAgICAgIHNoYXJlZDogdHJ1ZSwKICAgICAgICAgICAgICAgIGludGVyc2VjdDogZmFsc2UsCiAgICAgICAgICAgICAgICB4OiB7IGZvcm1hdHRlcjogKHZhbCkgPT4geyByZXR1cm4gIkRheSAiK3ZhbDsgfSB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHN0cm9rZTogewogICAgICAgICAgICAgICAgd2lkdGg6IDMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgZ3JpZDogewogICAgICAgICAgICAgICAgcm93OiB7CiAgICAgICAgICAgICAgICAgICAgY29sb3JzOiBbIiNmM2YzZjMiLCAidHJhbnNwYXJlbnQiXSwgLy8gdGFrZXMgYW4gYXJyYXkgd2hpY2ggd2lsbCBiZSByZXBlYXRlZCBvbiBjb2x1bW5zCiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMC41CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHhheGlzOiB7CiAgICAgICAgICAgICAgICB0eXBlOiAidGV4dCIsCiAgICAgICAgICAgICAgICBjYXRlZ29yaWVzOiB0aGlzLmRhdGVzLAogICAgICAgICAgICAgICAgbGFiZWxzOiB7CiAgICAgICAgICAgICAgICAgICAgcm90YXRlOiAtMTAKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgeWF4aXM6IHsKICAgICAgICAgICAgICAgIGxvZ2FyaXRobWljOiBmYWxzZSwKICAgICAgICAgICAgICAgIGRlY2ltYWxzSW5GbG9hdDogMgogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["CountryCompareSection.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsfile":"CountryCompareSection.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div v-if=\"series && dates\" class=\"mBlock\" style=\"color: grey\">\r\n\r\n        <DataSwitch :data-type=\"dataType\" @typeChange=\"dataType = $event\"></DataSwitch>\r\n\r\n        <div style=\"padding-bottom: 10px;font-size: 12px;\">*{{$t(\"compareNote\")}}</div>\r\n\r\n        <VueApexCharts width=\"100%\" height=\"320\" type=\"line\" :options=\"options\" :series=\"series\" v-if=\"selectedCountries.length>0\"></VueApexCharts>\r\n\r\n        {{$t(\"compareSelect\")}}\r\n        <v-select\r\n                multiple\r\n                placeholder=\"Select countries to compare\"\r\n                label=\"countries\"\r\n                v-model=\"selectedCountries\"\r\n                :options=\"countryListFiltered\"\r\n                :selectable=\"() => selectedCountries.length < 10\"\r\n        />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import VueApexCharts from \"vue-apexcharts\";\r\n    import vSelect from 'vue-select'\r\n    import DataSwitch from './DataSwitch';\r\n    import {\r\n        getCountryCompareData\r\n    } from \"../js/locationUtils\"\r\n    export default {\r\n        name: \"CountryCompareSection\",\r\n        props: [\"globalData\", \"countryList\"],\r\n        components:{\r\n            VueApexCharts,\r\n            vSelect,\r\n            DataSwitch\r\n        },\r\n        data: function () {\r\n            return {\r\n                countryListFiltered: [],\r\n                selectedCountries: [\"United Kingdom\", \"Spain\", \"France\", \"Italy\", \"Germany\"],\r\n                dates: null,\r\n                dataType: \"confirmed\",\r\n                series: null\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!window.calculatedCountryData){\r\n                window.calculatedCountryData = {}\r\n            }\r\n            this.countryListFiltered = this.countryList.slice(3);\r\n            this.getSeries();\r\n        },\r\n        watch:{\r\n          selectedCountries:function () {\r\n              this.getSeries();\r\n              window.ga('send', 'event', \"compare\", \"countries-loaded\", this.selectedCountries.toString());\r\n          },\r\n          dataType:function () {\r\n              this.getSeries();\r\n              window.ga('send', 'event', \"compare\", \"type-changed\", this.dataType);\r\n          }\r\n        },\r\n        methods:{\r\n            getSeries: function () {\r\n                if(this.selectedCountries.length===0) return [];\r\n                let data = this.selectedCountries.map(country=>{\r\n                    let countryData;\r\n                    if(window.calculatedCountryData[country]){\r\n                        countryData = window.calculatedCountryData[country]\r\n                    }else{\r\n                        countryData = getCountryCompareData(this.globalData, country, 50);\r\n                        window.calculatedCountryData[country] = countryData\r\n                    }\r\n                    return {\r\n                        name: country,\r\n                        data: countryData?.map(a => {\r\n                            if(this.dataType===\"active\") {\r\n                                return a.confirmed - a.death - a.cured;\r\n                            }else if(this.dataType===\"dRate\"){\r\n                                return (a.death / a.confirmed).toPrecision(2);\r\n                            }else if(this.dataType===\"cRate\"){\r\n                                return (a.cured / a.confirmed).toPrecision(2);\r\n                            }else {\r\n                                return a[this.dataType];\r\n                            }\r\n                        })\r\n                    }});\r\n                console.log(data);\r\n                let maxLen = Math.max.apply(Math, data.map(a => a.data.length));\r\n                let dateArr = Array.from(Array(maxLen).keys());\r\n                // ref https://stackoverflow.com/questions/3746725/\r\n                // eslint-disable-next-line vue/no-side-effects-in-computed-properties\r\n                this.dates = dateArr.map((d) => {\r\n                    return \"D\" + d;\r\n                });\r\n                this.series = data;\r\n            },\r\n        },\r\n        computed:{\r\n            options:function () { return  {\r\n                chart: {\r\n                    id: \"cc\",\r\n                    height: 320,\r\n                    type: \"line\",\r\n                    stacked: false,\r\n                    zoom: {\r\n                        enabled: window.innerWidth > 800\r\n                    }\r\n                },\r\n                tooltip:{\r\n                    shared: true,\r\n                    intersect: false,\r\n                    x: { formatter: (val) => { return \"Day \"+val; } }\r\n                },\r\n                stroke: {\r\n                    width: 3\r\n                },\r\n                grid: {\r\n                    row: {\r\n                        colors: [\"#f3f3f3\", \"transparent\"], // takes an array which will be repeated on columns\r\n                        opacity: 0.5\r\n                    }\r\n                },\r\n                xaxis: {\r\n                    type: \"text\",\r\n                    categories: this.dates,\r\n                    labels: {\r\n                        rotate: -10\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    logarithmic: false,\r\n                    decimalsInFloat: 2\r\n                }\r\n            }\r\n        }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}