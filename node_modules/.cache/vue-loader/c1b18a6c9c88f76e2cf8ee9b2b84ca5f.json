{"remainingRequest":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\src\\App.vue?vue&type=template&id=7ba5bd90&scoped=true&","dependencies":[{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\src\\App.vue","mtime":1590683751774},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}