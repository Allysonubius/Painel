{"remainingRequest":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\allys\\Documents\\GIT\\Painel\\src\\components\\RegionTable.vue?vue&type=style&index=0&id=8ea5238c&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\src\\components\\RegionTable.vue","mtime":1590605624636},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50YWJsZXsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7Cn0KdGh7CiAgICBwb3NpdGlvbjogc3RpY2t5OwogICAgdG9wOjU1cHg7CiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsKICAgIHotaW5kZXg6IDUwOwp9Ci50b3BaZXJvIHRoewogICAgdG9wOi0xcHg7Cn0KCi5zaG93QWxsewogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgY3Vyc29yOiBwb2ludGVyOwogICAgY29sb3I6ICMwMDk5ZGI7CiAgICBwYWRkaW5nLXRvcDogMTBweDsKfQouc3RpY2t7CiAgICBwb3NpdGlvbjogc3RpY2t5O2JvdHRvbTowOwogICAgYm9yZGVyLXRvcDogc29saWQgMXB4IHdoaXRlc21va2U7CiAgICBiYWNrZ3JvdW5kOndoaXRlO3BhZGRpbmc6IDAgMTBweDsKICAgIHBhZGRpbmctYm90dG9tOiA1MHB4OwogICAgei1pbmRleDogNTA7Cn0KLm1kaS1zb3J0LWFzY2VuZGluZ3sKICAgIG9wYWNpdHk6IDAuNDsKICAgIHBhZGRpbmctbGVmdDogNXB4OwogICAgY3Vyc29yOiBwb2ludGVyOwp9Ci5hY3RpdmUgLm1kaS1zb3J0LWFzY2VuZGluZ3sKICAgIGNvbG9yOiAjNTA5OGQ2OwogICAgb3BhY2l0eTogMTsKfQoKLmdvVG9Db3VudHJ5ewogICAgZm9udC13ZWlnaHQ6IGJvbGRlcjsKICAgIGN1cnNvcjogcG9pbnRlcjsKfQoKLmdvVG9Db3VudHJ5IHN2Z3sKICAgIG1hcmdpbi10b3A6IC0ycHg7CiAgICBvcGFjaXR5OiAwLjU7Cn0K"},{"version":3,"sources":["RegionTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"RegionTable.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"mBlock\" v-if=\"currentData\">\r\n\r\n        <div class=\"switch-header\">\r\n            <DataSwitch :data-type=\"dataType\" @typeChange=\"changeDataType($event)\" :disabled=\"tab === 1 && isUk\"></DataSwitch>\r\n            <CountrySwitch v-if=\"regionData.country\" :tab=\"tab\"  @changeTab=\"changeTab($event)\"></CountrySwitch>\r\n        </div>\r\n\r\n        <div v-if=\"tableData\">\r\n            <table class=\"table table-striped table-hover\" style=\"position: relative;border-collapse: collapse; \" :class=\"{topZero: desktopLayout}\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\" :class=\"{active: sort===1}\" @click=\"sortByAlphabet()\">{{$t('table.region')}}<SortIcon/></th>\r\n                    <th scope=\"col\" :class=\"{active: sort===2}\" @click=\"sortByNumber()\" nowrap>{{$t('table.byCases')}}<SortIcon/></th>\r\n                    <th scope=\"col\" :class=\"{active: sort===3}\" @click=\"sortByIncreaseNumber()\" nowrap>{{$t('table.changes')}}<SortIcon/></th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr class=\"singleRegionData\" v-for=\"singleRegion in tableData.slice(0, limit)\" :key=\"singleRegion.id\">\r\n                    <td>\r\n                        <div class=\"goToCountry\" v-if=\"tab===0\" @click=\"switchCountry(singleRegion.location)\">{{ singleRegion.location }}<MoreIcon/></div>\r\n                        <div v-else>{{ singleRegion.location }}</div>\r\n                    </td>\r\n                    <td>{{ isRate ? singleRegion[dataType].toFixed(2) : singleRegion[dataType]}}</td>\r\n                    <td>{{ singleRegion.change }}</td>\r\n                </tr>\r\n                <tr></tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div v-else style=\"padding: 30px;text-align: center;\">{{$t('noData')}}</div>\r\n        <div :class=\"(limit===10)?'':'stick'\">\r\n            <div v-if=\"tableData\" class=\"showAll\" @click=\"limit=(limit===10)?tableData.length:10\">{{(limit===10)?$t('table.showAll'):$t('table.showLess')}}</div>\r\n            <SlideController v-if=\"date\" :start-date=\"currentData[0].date\" :end-date=\"currentData[currentData.length-1].date\"\r\n                             :hidePlayButton=\"true\" :current-date=\"date\" @change=\"changeDate\" @playPause=\"playing = $event\"\r\n                             :enableEvenIfPaused=\"true\" :playing=\"false\"></SlideController>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import SlideController from './SlideController'\r\n    import SortIcon from 'mdi-vue/SortAscending'\r\n    import MoreIcon from 'mdi-vue/ChevronRight'\r\n    import DataSwitch from './DataSwitch';\r\n    import CountrySwitch from './CountrySwitch';\r\n    import { getSmallerDate } from '../js/locationUtils'\r\n    export default {\r\n        name: \"RegionTable\",\r\n        props: [\"regionData\",\"mainDate\",\"isUk\",\"currentCountry\",\"desktopLayout\"],\r\n        components: {\r\n            SlideController,\r\n            SortIcon,\r\n            DataSwitch,\r\n            CountrySwitch,\r\n            MoreIcon\r\n        },\r\n        data: function (){\r\n            return {\r\n                tableData: [],\r\n                sort: 2,\r\n                limit: 10,\r\n                date: null,\r\n                currentData: null,\r\n                tab: 1,\r\n                dataType: \"confirmed\"\r\n            }\r\n        },\r\n        mounted(){\r\n            if(this.regionData.country && this.regionData.country[this.regionData.country.length-1].arr.length>1){\r\n                this.changeTab(1)\r\n            }else {\r\n                this.changeTab(0)\r\n            }\r\n        },\r\n        watch: {\r\n            mainDate: function () {\r\n                if(this.mainDate) {\r\n                    let dateToChange = getSmallerDate(this.mainDate, this.currentData[this.currentData.length-1].date);\r\n                    this.changeDate(dateToChange)\r\n                }\r\n            }\r\n        },\r\n        computed:{\r\n          isRate: function () {\r\n              return this.dataType.includes('Rate')\r\n          }\r\n        },\r\n        methods:{\r\n            switchCountry(e){\r\n                window.scrollTo(0,0);\r\n                window.ga('send', 'event', \"country\", \"country-changed-from-table\", e);\r\n                this.$emit(\"switchCountry\", e);\r\n            },\r\n\r\n            changeDataType(type){\r\n                this.dataType = type;\r\n                this.changeTab(this.tab)\r\n            },\r\n\r\n            getCurrentTableData: function(current){\r\n                if(!current.find(ele=>ele.date===this.date))\r\n                    this.date = current[current.length-1].date;\r\n                this.currentData = current;\r\n                this.updateTableData(current.length-1)\r\n            },\r\n\r\n            changeDate: function(date){\r\n                let idx = this.currentData.findIndex(ele=>ele.date == date);\r\n                this.date = date;\r\n                this.updateTableData(idx)\r\n            },\r\n\r\n            changeTab(tab){\r\n                if(tab===0){\r\n                    if(this.dataType === \"number\") this.dataType = \"confirmed\";\r\n                    this.getCurrentTableData(this.regionData.global)\r\n                }else {\r\n                    if(this.isUk) this.dataType = \"number\";\r\n                    this.getCurrentTableData(this.regionData.country)\r\n                }\r\n                this.tab = tab;\r\n            },\r\n\r\n            updateTableData: function(currentIndex){\r\n                // const moment = require('moment');\r\n                let current = this.currentData[currentIndex]?.arr;\r\n                let last = this.currentData[currentIndex-1]?.arr;\r\n                let id = 0;\r\n                let sum = 0;\r\n                for (let region of current)\r\n                {\r\n                    let lastData = last?.find(element => element.location == region.location);\r\n                    region.id = id++;\r\n                    sum+=region[this.dataType];\r\n                    let change = lastData? region[this.dataType] - lastData[this.dataType] : 0;\r\n                    region.change = (change>0?\"+\":\"\") + (this.isRate ? change.toFixed(2) : change)\r\n                }\r\n                if(sum===0 && (this.dataType===\"cured\" || this.dataType===\"cRate\")) {\r\n                    this.tableData = null;\r\n                    return;\r\n                }\r\n                this.tableData = current;\r\n                this.sortTable()\r\n            },\r\n\r\n            sortTable: function(){\r\n              switch (this.sort) {\r\n                  case 0:\r\n                      this.sortByDefault();\r\n                      break;\r\n                  case 1:\r\n                      this.sortByAlphabet();\r\n                      break;\r\n                  case 2:\r\n                      this.sortByNumber();\r\n                      break;\r\n                  case 3:\r\n                      this.sortByIncreaseNumber();\r\n                      break;\r\n              }\r\n            },\r\n\r\n            sortByDefault:function () {\r\n                this.sort = 0;\r\n                this.tableData = [...this.tableData].sort((a, b) => b.id - a.id);\r\n            },\r\n            sortByAlphabet:function () {\r\n                this.sort = 1;\r\n                this.tableData = [...this.tableData].sort((a, b) => a.location.localeCompare(b.location));\r\n            },\r\n            sortByNumber:function () {\r\n                this.sort = 2;\r\n                this.tableData = [...this.tableData].sort((a, b) => b[this.dataType] - a[this.dataType]);\r\n            },\r\n            sortByIncreaseNumber:function () {\r\n                this.sort = 3;\r\n                this.tableData = [...this.tableData].sort((a, b) => b.change - a.change);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .table{\r\n        font-size: 14px;\r\n        border-collapse: collapse;\r\n    }\r\n    th{\r\n        position: sticky;\r\n        top:55px;\r\n        background: white;\r\n        z-index: 50;\r\n    }\r\n    .topZero th{\r\n        top:-1px;\r\n    }\r\n\r\n    .showAll{\r\n        text-align: center;\r\n        cursor: pointer;\r\n        color: #0099db;\r\n        padding-top: 10px;\r\n    }\r\n    .stick{\r\n        position: sticky;bottom:0;\r\n        border-top: solid 1px whitesmoke;\r\n        background:white;padding: 0 10px;\r\n        padding-bottom: 50px;\r\n        z-index: 50;\r\n    }\r\n    .mdi-sort-ascending{\r\n        opacity: 0.4;\r\n        padding-left: 5px;\r\n        cursor: pointer;\r\n    }\r\n    .active .mdi-sort-ascending{\r\n        color: #5098d6;\r\n        opacity: 1;\r\n    }\r\n\r\n    .goToCountry{\r\n        font-weight: bolder;\r\n        cursor: pointer;\r\n    }\r\n\r\n    .goToCountry svg{\r\n        margin-top: -2px;\r\n        opacity: 0.5;\r\n    }\r\n</style>"]}]}