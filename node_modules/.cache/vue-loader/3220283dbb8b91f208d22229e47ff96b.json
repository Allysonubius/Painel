{"remainingRequest":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\allys\\Documents\\GIT\\Painel\\src\\App.vue?vue&type=style&index=0&id=7ba5bd90&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\src\\App.vue","mtime":1590683751774},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\Painel\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi52ZXJ0aWNhbC1jZW50ZXIgewogICAgbWFyZ2luOiAwOwogICAgcG9zaXRpb246IGFic29sdXRlOwogICAgdG9wOiA1MCU7CiAgICBsZWZ0OiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTsKfQoKaDYgewogICAgcGFkZGluZy1sZWZ0OiAyMHB4Owp9CgouY292aWRfaGVhZGVyIHsKICAgIHBhZGRpbmc6IDIwcHggMTBweDsKICAgIHRleHQtYWxpZ246IHJpZ2h0OwogICAgZGlzcGxheTogZmxleDsKICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47Cn0KCi5oZWFkZXJfdGl0bGUgewogICAgb3BhY2l0eTogMC41Owp9CgouZml4X2JvdHRvbSB7CiAgICBwb3NpdGlvbjogZml4ZWQ7CiAgICBib3R0b206IDIwcHg7CiAgICB3aWR0aDogMTAwJTsKICAgIGJhY2tncm91bmQ6IGRlZXBza3libHVlOwogICAgY29sb3I6IHdoaXRlOwogICAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICB0cmFuc2l0aW9uOiAyczsKICAgIHotaW5kZXg6IDEwMDsKICAgIG1heC13aWR0aDogNTAwcHg7CiAgICBsZWZ0OiA1MCU7CiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTUwJSk7CiAgICBib3JkZXItcmFkaXVzOiA2cHg7Cn0KCi5zZWxlY3QgewogICAgd2lkdGg6IDE5MHB4OwoKfQoKLm1Db250ZW50RGVza3RvcHsKICAgIG1heC13aWR0aDogMTAwJTsKfQoKLm1TZWN0aW9uRGVza3RvcHsKICAgIHdpZHRoOiAzMHZ3OwogICAgbWFyZ2luOiAxLjN2dzsKICAgIHBhZGRpbmctdG9wOiAwOwp9CgoKQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA2MDBweCkgewogICAgLmNvdmlkX2hlYWRlciB7CiAgICAgICAgcGFkZGluZzogMjBweCAxMHB4OwogICAgICAgIGRpc3BsYXk6IGZsZXg7CiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlOwogICAgICAgIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDsKICAgIH0KCiAgICAuaGVhZGVyX3RpdGxlIGgyIHsKICAgICAgICBmb250LXNpemU6IDMwcHg7CiAgICB9CgogICAgLmhlYWRlcl90aXRsZSBoMyB7CiAgICAgICAgZm9udC1zaXplOiAyNXB4OwogICAgfQoKICAgIC5maXhfYm90dG9tewogICAgICAgIG1heC13aWR0aDogMTAwJTsKICAgICAgICBtYXJnaW4tYm90dG9tOiAwcHg7CiAgICAgICAgbGVmdDogMDsKICAgICAgICBib3R0b206IDA7CiAgICAgICAgdHJhbnNmb3JtOiBub25lOwogICAgICAgIGJvcmRlci1yYWRpdXM6IDA7CiAgICB9Cn0KCiAgICAuaGlkZS1wb3B1cCB7CiAgICBib3R0b206IC00MHB4OwogICAgb3BhY2l0eTogMDsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappingsqgBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n    <div id=\"app\">\r\n        <div class=\"mContent\" v-if=\"dataCurrent && shouldRender\" :class=\"{mContentDesktop: desktopLayout}\">\r\n            <div :class=\"{'d-flex': desktopLayout}\">\r\n            <div :class=\"{'mSectionDesktop': desktopLayout}\">\r\n    <!--          header section -->\r\n                <div class=\"covid_header\">\r\n                    <div>\r\n                        <h3>Selecione o páis:</h3>\r\n                        <vSelect class=\"select\" :clearable=\"false\" :value=\"currentCountry\" :options=\"countryList\"\r\n                                 @input=\"switchCountry\"></vSelect>\r\n                    </div>\r\n                    <div class=\"header_title\">\r\n                        <h2>COVID-19</h2>\r\n                        <h3 v-html=\"$t('title')\"></h3>\r\n                    </div>\r\n                </div>\r\n\r\n    <!--            number display-->\r\n                <TodayNumberSection :display=\"display\"></TodayNumberSection>\r\n\r\n    <!--            UK number display and postcode -->\r\n                <UkRegionSection v-if=\"dataCurrent.isUk && dataUk\" :dataUk=\"dataUk\"></UkRegionSection>\r\n\r\n    <!--            time machine -->\r\n                <div v-if=\"!dataCurrent.isUk\">\r\n                    <div class=\"title\">{{ $t('Máquina no tempo') }}</div>\r\n                    <div class=\"mBlock\">\r\n                        <SlideController :start-date=\"startDate\" :end-date=\"endDate\" :hidePlayButton=\"true\"\r\n                                         :disableClick=\"true\"\r\n                                         :current-date=\"currentDate\" @changeIndex=\"changeDateIdx\" @change=\"changeDate\"\r\n                                         @dragEnded=\"onTMDragEnd\"\r\n                                         :enableEvenIfPaused=\"true\" :playing=\"false\"></SlideController>\r\n                        <div class=\"displayInfo\" style=\"text-align: center; opacity:0.5;padding-top:6px\">{{ $t('tmHint')\r\n                            }}\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"fix_bottom\" style=\"background: orange;\"\r\n                         :class=\"{'hide-popup': (currentDate === endDate || (section && !desktopLayout))}\">\r\n                        {{ $t('tmSticky') }} ({{currentDate}})\r\n                        <span style=\"margin-left: 5px;text-decoration: underline;cursor: pointer;\" @click=\"revertTM\">{{ $t('tmRevert') }}</span>\r\n                    </div>\r\n                </div>\r\n\r\n    <!--            near by cases -->\r\n                <div v-if=\"countryName==='UK' || countryName==='US'\">\r\n                    <div class=\"title\">{{ $t('Próximos') }}</div>\r\n                    <div class=\"mBlock\">\r\n                        <NearbyCasesFinder :regionData=\"sortedRegionData\" :currentCountry=\"countryName\"></NearbyCasesFinder>\r\n                    </div>\r\n                </div>\r\n\r\n    <!--                charts (show on desktop layout) -->\r\n                <div class=\"mSection\" v-if=\"desktopLayout\" style=\"padding-top: 0\">\r\n                    <ChartSection :chart-data=\"chartData ? chartData : dataCurrent.history\" :is-uk=\"dataCurrent.isUk\"></ChartSection>\r\n                </div>\r\n\r\n            </div>\r\n\r\n<!--            nav bar -->\r\n            <div id=\"navPlaceholder\" ref=\"navPlaceholder\" v-if=\"!desktopLayout\"></div>\r\n            <div class=\"mNav\" ref=\"nav\" id=\"mNavbar\" v-if=\"!desktopLayout\">\r\n                <ul class=\"nav nav-pills nav-fill\" v-scroll-spy-active=\"{selector: 'li a', class: 'active'}\">\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#charts\">{{ $t('Atual') }}</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#animation\">{{ $t('Animação') }}</a>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        <a class=\"nav-link\" href=\"#regionData\">{{ $t('Mapa') }}</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div :class=\"{'d-flex': desktopLayout}\" v-scroll-spy=\"{data: 'section', offset: 100, allowNoActive: false}\">\r\n<!--                charts (show on mobile layout) -->\r\n                <div class=\"mSection\" v-if=\"!desktopLayout\" id=\"charts\" style=\"padding-top: 0\">\r\n                    <ChartSection :chart-data=\"chartData ? chartData : dataCurrent.history\" :is-uk=\"dataCurrent.isUk\"></ChartSection>\r\n                </div>\r\n\r\n<!--               animations -->\r\n                <div class=\"mSection\" :class=\"{'mSectionDesktop': desktopLayout}\" id=\"animation\">\r\n                    <div class=\"title\">{{ $t('Historico de animação') }}</div>\r\n                    <BarRaceSection v-if=\"tableData.hasData\" :table-data=\"tableData\" :is-uk=\"dataCurrent.isUk\"></BarRaceSection>\r\n                    <div class=\"title\">{{ $t('Razão') }}</div>\r\n                    <PieSection :allHistoryData=\"dataCurrent.history\" :mainDate=\"mainDate\"></PieSection>\r\n                    <div class=\"title\">{{ $t('Comparação em países') }}</div>\r\n                    <CountryCompareSection :global-data=\"dataGlobal\"\r\n                                           :country-list=\"countryList\"></CountryCompareSection>\r\n                </div>\r\n\r\n<!--                map and table -->\r\n                <div class=\"mSection\" :class=\"{'mSectionDesktop': desktopLayout}\" id=\"regionData\">\r\n                    <div class=\"title\">{{ $t('Mapa') }}</div>\r\n                    <MapSection :tableData=\"tableData\" :countryName=\"countryName\" :mainDate=\"mainDate\"></MapSection>\r\n                    <br>\r\n                    <div class=\"title\">{{ $t('Região') }}</div>\r\n                    <RegionTable :regionData=\"tableData\" v-if=\"tableData.hasData\" :mainDate=\"mainDate\" :is-uk=\"dataCurrent.isUk\"\r\n                                 @switchCountry=\"switchCountry\" :current-country=\"currentCountry\" :desktop-layout=\"desktopLayout\"></RegionTable>\r\n                </div>\r\n\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"mSection\" id=\"share\" :class=\"{mContent:desktopLayout}\">\r\n<!--                share -->\r\n                <div v-if=\"!isLocaleCN\">\r\n                </div>\r\n\r\n\r\n<!--                 WeChat notification, for CN only -->\r\n                <div v-if=\"isLocaleCN\">\r\n                    <div class=\"title\">实时更新订阅</div>\r\n                    <div class=\"mBlock\" style=\"text-align: center;padding:30px\">\r\n                        <div>微信扫描或长按下方二维码，或搜索\"<span style=\"text-wrap: none\">UCLCSSA学联社区</span>\"</div>\r\n                        <img src=\"./assets/qr.png\" style=\"max-width: 260px;\"/>\r\n                        <div>订阅每日实时数据更新及重要预警通知</div>\r\n                        <div v-if=\"isLocaleCN && isWeChat()\"\r\n                             style=\"margin-top: 20px;text-align:center;user-select: none;\">\r\n                            <hr>\r\n                            <div style=\"font-size: 20px;\">本应用地址</div>\r\n                            <div style=\"font-size: 25px;font-weight:bold;padding: 10px 0;user-select: text;\">\r\n                                covid19.uclcssa.cn\r\n                            </div>\r\n                            长按复制即可分享给其他人\r\n                        </div>\r\n                    </div>\r\n\r\n<!--                   Mini app fallback (as not external link should exists) -->\r\n                    <div v-if=\"isMiniApp\">\r\n                        <br>\r\n                        <div class=\"title\">{{ $t('About') }}</div>\r\n                        <ul>\r\n                            <li>请使用浏览器访问 covid19.uclcssa.cn 以获取本页面数据来源及更新时间</li>\r\n                            <li>本页面开源于Github，欢迎提供任何建议及贡献！</li>\r\n                            <li>作者：©2020 Henry (@henryz00), Davies (@DaviesXue) | UCLCSSA 伦敦大学学院中国学联</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n<!--                source and credits -->\r\n                <div v-if=\"!isLocaleCN || !isMiniApp\">\r\n                    <br>\r\n                    <div class=\"title\">{{ $t('subtitles.source') }}</div>\r\n                    <ul>\r\n                        <li><a href=\"https://github.com/isjeffcom/coronvirusFigureUK\">Coronavirus UK Data API -\r\n                            isjeffcom</a></li>\r\n                        <li><a href=\"https://github.com/CSSEGISandData/COVID-19\">COVID-19 Data Repository - Johns\r\n                            Hopkins CSSE</a></li>\r\n                        <li><a href=\"https://apify.com/covid-19\">COVID-19 Data APIs for statistics - APIFY</a></li>\r\n                        <li><a href=\"https://github.com/ExpDev07/coronavirus-tracker-api\">Coronavirus Tracker API -\r\n                            ExpDev07</a></li>\r\n                        <li><a href=\"https://github.com/nytimes/covid-19-data\">Coronavirus Data in the United States - The New York Times</a></li>\r\n                        <li><a href=\"https://bl.ocks.org/jrzief/70f1f8a5d066a286da3a1e699823470f\">D3 Bar Chart Races (Based on) - jrzief</a></li>\r\n                        <li><a href=\"https://www.iconfinder.com/p/coronavirus-awareness-icons\">Coronavirus Awareness\r\n                            Icons - iconfinder</a></li>\r\n                        <li>{{lastUpdated}}</li>\r\n                        <li v-if=\"isLocaleCN\">obrigado <a href=\"https://github.com/isjeffcom/\">@isjeff</a> API de dados britânica fornecida</li>\r\n                    </ul>\r\n\r\n\r\n                    <div class=\"title\">{{ $t('About') }}</div>\r\n                    <ul>\r\n                        <li>Este projeto é de código aberto em <a\r\n                                href=\"https://github.com/henryz00/COVID-19-Data-Visualizer-UK\">Github Repository Original</a>\r\n                        </li>\r\n                        <li>Versão em português <a href=\"https://github.com/Allysonubius/Covid-19-Timeline-PT-BR\">GitHub Repositório PT-BR</a>\r\n                        </li>\r\n                        <li>© 2020 <a href=\"https://github.com/henryz00\">@henryz00</a> e <a\r\n                                href=\"https://github.com/DaviesXue\">@DaviesXue</a> .\r\n                            <span>{{isLocaleCN ? \" | UCLCSSA Associação Chinesa da University College London\" : \" na University College London.\"}}</span>\r\n                        </li>\r\n                        <li>Modificado em PT-BR por <a href=\"https://github.com/Allysonubius?tab=repositories\">@Allysonubius </a>(Brazil - Desenvolvedor Full Stack | Estudante iniciante.)</li>\r\n                    </ul>\r\n                        <div style=\"font-size:14px; opacity:0.5;\">Você é livre para distribuir, incorporar ou editar todo ou parte do site sem aviso prévio, conforme desde que você mencione a fonte (covid19track.site ou covid19.uclcssa.cn) ou mantenha esta seção intacta. Consulte o repositório do github para obter mais informações, se você quiser modificar o código fonte.\r\n                        </div>\r\n                </div>\r\n\r\n<!--                logo and language switch -->\r\n                <div style=\"text-align: center;margin: 50px 0;opacity: 0.5;color: silver;\">\r\n                    <img src=\"./assets/logo_grey.png\" style=\"max-width: 200px;\" v-if=\"isLocaleCN\"/>\r\n                    <br><br>\r\n                    <a href=\"#\" @click=\"changeLang('en')\">English</a> | <a href=\"#\" @click=\"changeLang('zh')\">中文</a> |\r\n                    <a href=\"#\" @click=\"changeLang('pt-br')\">Português</a>\r\n                </div>\r\n            </div>\r\n\r\n            <div v-if=\"isMiniApp && isLocaleCN && !showWechatPopup\">\r\n                <MiniAppPostOverlay></MiniAppPostOverlay>\r\n            </div>\r\n\r\n            <FAB v-if=\"isDesktop\" @switchLayout=\"desktopLayout=$event\"></FAB>\r\n\r\n        </div>\r\n\r\n<!--        loading indicator -->\r\n        <div v-else>\r\n            <div class=\"vertical-center\">\r\n                <div class=\"spinner-border text-primary\" style=\"width: 3rem; height: 3rem;\" role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n<!--        launch indicator -->\r\n        <div class=\"fix_bottom\" style=\"font-size: 14px;font-weight: bold;\" :class=\"{'hide-popup': !showWechatPopup}\">\r\n            {{launchIndicator}}\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    /* eslint-disable */\r\n    import RegionTable from \"./components/RegionTable.vue\";\r\n    import UkRegionSection from \"./components/UkRegionSection.vue\";\r\n    import TodayNumberSection from \"./components/TodayNumberSection.vue\";\r\n    import BarRaceSection from \"./components/BarRaceSection.vue\";\r\n    import MapSection from \"./components/MapSection.vue\";\r\n    import ChartSection from \"./components/ChartSection.vue\";\r\n    import SlideController from \"./components/SlideController.vue\";\r\n    import PieSection from \"./components/PieSection.vue\";\r\n    import CountryCompareSection from \"./components/CountryCompareSection.vue\";\r\n    import MiniAppPostOverlay from \"./components/MiniAppPostOverlay.vue\";\r\n    import ShareIcons from \"./components/ShareIcons.vue\";\r\n    import NearbyCasesFinder from \"./components/NearbyCasesFinder.vue\";\r\n    import FAB from \"./components/FAB.vue\";\r\n    import vSelect from 'vue-select'\r\n    import 'vue-select/dist/vue-select.css';\r\n    import {\r\n        getRegionHistoryTableData,\r\n        getGlobalHistoryTableData,\r\n        parseLocationData,\r\n        getAllCountries,\r\n        getCountryData,\r\n        getCountryHistoryData,\r\n        getUSRegionData\r\n    } from \"./js/locationUtils\"\r\n\r\n    const moment = require('moment');\r\n\r\n    export default {\r\n        name: \"App\",\r\n        components: {\r\n            RegionTable,\r\n            BarRaceSection,\r\n            ChartSection,\r\n            PieSection,\r\n            TodayNumberSection,\r\n            UkRegionSection,\r\n            vSelect,\r\n            MapSection,\r\n            SlideController,\r\n            CountryCompareSection,\r\n            MiniAppPostOverlay,\r\n            ShareIcons,\r\n            NearbyCasesFinder,\r\n            FAB\r\n        },\r\n        data: () => {\r\n            return {\r\n                shouldRender: true,\r\n                dataCurrent: null,\r\n                dataUk: null,\r\n                dataGlobal: null,\r\n                sortedRegionData: null,\r\n                section: 0,\r\n                currentCountry: null,\r\n                countryList: [],\r\n                display: {\r\n                    confirmed: 0,\r\n                    confirmedChange: 0,\r\n                    deaths: 0,\r\n                    deathsChange: 0,\r\n                    tested: 0,\r\n                    testedChange: 0,\r\n                    cured: 0,\r\n                    curedChange: 0\r\n                },\r\n                tableData: {\r\n                    hasData: false\r\n                },\r\n                chartData: null,\r\n                isLocaleCN: false,\r\n                showWechatPopup: true,\r\n                currentDate: null,\r\n                mainDate: null,\r\n                lastUpdated: \"NEVER\",\r\n                launchIndicator: \"\",\r\n                isDesktop: false,\r\n                desktopLayout: false\r\n            };\r\n        },\r\n        mounted() {\r\n            window.dateFormat = \"DD MMM\";\r\n            let timeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\r\n            if (this.isWeChat()) {\r\n                this.$i18n.locale = \"zh\";\r\n            }\r\n            // miniapp china redirect\r\n            // if (this.isMiniApp && timeZone == \"Asia/Shanghai\") {\r\n            //     window.location.replace(\"https://uclcssa.cn/public/covid_redirect.html\");\r\n            //     window.ga('send', 'event', \"china-redirected\", \"mini-app-tab\", \"\");\r\n            //     return;\r\n            // }\r\n            this.isLocaleCN = this.$i18n.locale === \"zh\";\r\n            document.title = this.$t('pageTitle');\r\n            window.dateFormat = this.$t('dateFormat');\r\n            this.launchIndicator = this.$t('launchIndicator')[Math.floor(Math.random() * this.$t('launchIndicator').length)];\r\n\r\n            let performanceTimeStart = performance.now();\r\n            fetch(\"https://henryz.cc/projects/covid/api.php\").then(async res => {\r\n                let data = await res.json();\r\n                let resTime = Math.round(performance.now() - performanceTimeStart);\r\n                this.dataUk = data.uk;\r\n                this.dataUs = data.us;\r\n                this.dataGlobal = data.global;\r\n                console.log(data);\r\n                this.lastUpdated = `Global data updated ${moment(data.global.confirmed.last_updated).fromNow()},\r\n                          UK data updated ${moment(data.uk.now[0].ts).fromNow()}, data is ${data.isUpToDate ? \"\" : \"NOT\"} up to date.\r\n                          Data might not reflect the real number, and might be delayed.`;\r\n                //global data\r\n                this.tableData.global = getGlobalHistoryTableData(this.dataGlobal, false, true);\r\n                let countryArr = getAllCountries(this.dataGlobal.confirmed.locations);\r\n                this.countryList = [this.$t('selector.world'), this.$t('selector.uk'), this.$t('selector.us'),  ...countryArr];\r\n                this.initLocation(timeZone);\r\n\r\n                this.getNavScrollAnchor();\r\n                let performanceTime = Math.round(performance.now() - performanceTimeStart);\r\n                console.log(\"Data loaded\", resTime, performanceTime);\r\n                window.ga('send', 'event', \"net-request\", \"initial-fetch-loaded\", `loaded-${resTime}ms;calculated-${performanceTime}ms;`);\r\n            });\r\n\r\n            setTimeout(() => {\r\n                this.showWechatPopup = false\r\n            }, 2000)\r\n\r\n        },\r\n        methods: {\r\n            initLocation: function(timezone){\r\n                if(timezone.includes(\"Europe/London\") || this.isMiniApp){\r\n                    this.currentCountry = this.countryList[1];\r\n                    this.loadUkData();\r\n                }else if(timezone.includes(\"America\")){\r\n                    this.currentCountry = this.countryList[2];\r\n                    this.loadUsData();\r\n                }else{\r\n                    this.currentCountry = this.countryList[0];\r\n                    this.loadCountryData(\"world\");\r\n                }\r\n                window.ga('send', 'event', \"timezone-acquired\", this.currentCountry, timezone);\r\n            },\r\n            switchCountry: async function (e) {\r\n                this.shouldRender = false;\r\n                console.log(e);\r\n                this.chartData = null;\r\n                this.currentCountry = e;\r\n                window.ga('send', 'event', \"country\", \"country-changed\", e);\r\n                if (e === this.countryList[0]) {\r\n                    this.loadCountryData(\"world\");\r\n\r\n                } else if (e === this.countryList[1]) {\r\n                    this.loadUkData();\r\n                } else if (e === this.countryList[2] || e === \"US\") {\r\n                    await this.loadUsData();\r\n                } else {\r\n                    this.loadCountryData(e)\r\n                }\r\n                this.forceReload()\r\n            },\r\n            loadCountryData: function (countryName) {\r\n                this.countryName = countryName;\r\n                let countryData = getCountryData(this.dataGlobal, countryName);\r\n                console.log(countryData.confirmed.locations);\r\n                this.dataCurrent = {};\r\n                this.dataCurrent.isUk = false;\r\n                //history data\r\n                //console.log(\"data loaded\", countryData);\r\n                this.tableData.country = countryName === \"world\" ? null : getGlobalHistoryTableData(countryData, true);\r\n                this.tableData.hasData = true;\r\n                this.dataCurrent.history = getCountryHistoryData(countryData);\r\n                console.log(\"country loaded\", this.dataCurrent);\r\n                this.startDate = moment(this.dataCurrent.history[0].date).format(window.dateFormat);\r\n                this.endDate = moment(this.dataCurrent.history[this.dataCurrent.history.length - 1].date).format(window.dateFormat);\r\n                this.currentDate = this.endDate;\r\n                this.calculateDisplay(this.dataCurrent.history.length - 1)\r\n            },\r\n            loadUsData: async function (){\r\n                this.loadCountryData(\"US\");\r\n                this.tableData.country = await getUSRegionData(this.dataUs);\r\n            },\r\n            calculateDisplay: function (idx) {\r\n                let current = this.dataCurrent.history[idx];\r\n                let last = this.dataCurrent.history[idx - 1] ? this.dataCurrent.history[idx - 1] : current;\r\n                this.display = {\r\n                    confirmed: current.confirmed,\r\n                    confirmedChange: current.confirmed - last.confirmed,\r\n                    deaths: current.death,\r\n                    deathsChange: (current.death - last.death),\r\n                    tested: current.tested,\r\n                    testedChange: current.tested ?? (current.tested - last.tested),\r\n                    cured: current.cured,\r\n                    curedChange: (current.cured - last.cured)\r\n                };\r\n\r\n            },\r\n            loadUkData: function () {\r\n                this.countryName = \"UK\";\r\n                this.dataCurrent = this.dataUk;\r\n                this.dataCurrent.isUk = true;\r\n                let currentUkAreaData = parseLocationData(this.dataUk.now[0].area);\r\n                //history data\r\n                let todayData = this.dataUk.history[this.dataUk.history.length - 1];\r\n                let yesterData = this.dataUk.history[this.dataUk.history.length - 2];\r\n                this.tableData.country = getRegionHistoryTableData(this.dataUk.history, currentUkAreaData);\r\n                console.log(currentUkAreaData);\r\n\r\n                this.sortedRegionData = [...currentUkAreaData].sort((a, b) => b.number - a.number);\r\n                this.tableData.hasData = true;\r\n                this.currentDate = null;\r\n\r\n                let confirmedChange = this.dataUk.now[0].confirmed - todayData.confirmed;\r\n                let deathsChange = this.dataUk.now[0].death - todayData.death;\r\n                let testedChange = this.dataUk.now[0].tested - todayData.tested;\r\n\r\n                this.display = {\r\n                    confirmed: this.dataUk.now[0].confirmed,\r\n                    confirmedChange: confirmedChange != 0 ? confirmedChange : (todayData.confirmed - yesterData.confirmed),\r\n                    deaths: this.dataUk.now[0].death,\r\n                    deathsChange: deathsChange != 0 ? deathsChange : (todayData.death - yesterData.death),\r\n                    tested: this.dataUk.now[0].tested,\r\n                    testedChange: testedChange != 0 ? testedChange : (todayData.tested - yesterData.tested),\r\n                    cured: this.dataUk.now[1].cured,\r\n                    curedChange: (this.dataUk.now[1].cured - todayData.cured)\r\n                };\r\n            },\r\n            changeDateIdx: function (idx) {\r\n                this.calculateDisplay(idx)\r\n            },\r\n            changeDate: function (date) {\r\n                this.currentDate = date;\r\n            },\r\n            onTMDragEnd: function (idx) {\r\n                console.log(idx);\r\n                this.chartData = this.dataCurrent.history.slice(0, idx);\r\n                this.mainDate = this.currentDate;\r\n                window.ga('send', 'event', \"time-machine\", \"drag-end\", idx);\r\n            },\r\n            revertTM: function () {\r\n                console.log(\"OK\")\r\n                this.currentDate = this.endDate;\r\n                this.chartData = this.dataCurrent.history;\r\n                this.calculateDisplay(this.dataCurrent.history.length - 1);\r\n                window.ga('send', 'event', \"time-machine\", \"reverted\", this.endDate);\r\n            },\r\n            changeLang: function (lang) {\r\n                this.$i18n.locale = lang;\r\n                this.isLocaleCN = this.$i18n.locale === \"zh\";\r\n                document.title = this.$t('pageTitle');\r\n                this.countryList[0] = this.$t('selector.world');\r\n                this.countryList[1] = this.$t('selector.uk');\r\n                this.countryList[2] = this.$t('selector.us');\r\n                // this.currentCountry = this.countryList[0];\r\n                this.forceReload()\r\n            },\r\n            forceReload: function () {\r\n                //force reload\r\n                this.shouldRender = false;\r\n                this.$nextTick(() => {\r\n                    this.shouldRender = true;\r\n                });\r\n            },\r\n            isWeChat: function () {\r\n                let ua = window.navigator.userAgent.toLowerCase();\r\n                return (ua.match(/MicroMessenger/i) == 'micromessenger');\r\n            },\r\n            getNavScrollAnchor: function () {\r\n                document.addEventListener('scroll', () => {\r\n                    if(this.$refs[\"navPlaceholder\"]) {\r\n                        if (window.scrollY > this.$refs[\"navPlaceholder\"].offsetTop) {\r\n                            this.$refs[\"nav\"].classList.add(\"fixed_nav\");\r\n                            this.$refs[\"navPlaceholder\"].classList.add(\"navPlaceholder\");\r\n                        } else {\r\n                            this.$refs[\"nav\"].classList.remove(\"fixed_nav\");\r\n                            this.$refs[\"navPlaceholder\"].classList.remove(\"navPlaceholder\");\r\n                        }\r\n                    }\r\n                });\r\n\r\n                let checkLayout = ()=>{\r\n                    this.isDesktop = (window.innerWidth>1200);\r\n                    this.desktopLayout = (window.innerWidth>1400);\r\n                };\r\n\r\n                window.onresize = checkLayout;\r\n                checkLayout();\r\n            }\r\n        },\r\n        computed: {\r\n            isMiniApp: function () {\r\n                // WeChat Mini app\r\n                let url = new URL(window.location.href);\r\n                let query = url.searchParams.get(\"source\");\r\n                return query === \"apptab\";\r\n            }\r\n        },\r\n        watch: {\r\n            desktopLayout: function () {\r\n                this.forceReload()\r\n            }\r\n        }\r\n\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .vertical-center {\r\n        margin: 0;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n\r\n    h6 {\r\n        padding-left: 20px;\r\n    }\r\n\r\n    .covid_header {\r\n        padding: 20px 10px;\r\n        text-align: right;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .header_title {\r\n        opacity: 0.5;\r\n    }\r\n\r\n    .fix_bottom {\r\n        position: fixed;\r\n        bottom: 20px;\r\n        width: 100%;\r\n        background: deepskyblue;\r\n        color: white;\r\n        line-height: 40px;\r\n        text-align: center;\r\n        transition: 2s;\r\n        z-index: 100;\r\n        max-width: 500px;\r\n        left: 50%;\r\n        transform: translateX(-50%);\r\n        border-radius: 6px;\r\n    }\r\n\r\n    .select {\r\n        width: 190px;\r\n\r\n    }\r\n\r\n    .mContentDesktop{\r\n        max-width: 100%;\r\n    }\r\n\r\n    .mSectionDesktop{\r\n        width: 30vw;\r\n        margin: 1.3vw;\r\n        padding-top: 0;\r\n    }\r\n\r\n\r\n    @media only screen and (max-width: 600px) {\r\n        .covid_header {\r\n            padding: 20px 10px;\r\n            display: flex;\r\n            flex-direction: column-reverse;\r\n            align-items: flex-end;\r\n        }\r\n\r\n        .header_title h2 {\r\n            font-size: 30px;\r\n        }\r\n\r\n        .header_title h3 {\r\n            font-size: 25px;\r\n        }\r\n\r\n        .fix_bottom{\r\n            max-width: 100%;\r\n            margin-bottom: 0px;\r\n            left: 0;\r\n            bottom: 0;\r\n            transform: none;\r\n            border-radius: 0;\r\n        }\r\n    }\r\n\r\n        .hide-popup {\r\n        bottom: -40px;\r\n        opacity: 0;\r\n    }\r\n</style>\r\n"]}]}