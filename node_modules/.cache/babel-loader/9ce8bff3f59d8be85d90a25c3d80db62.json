{"remainingRequest":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\src\\components\\BarRace.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\src\\components\\BarRace.vue","mtime":1590605624602},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\allys\\Documents\\GIT\\COVID-19-Timeline-Data-Visualizer\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BarRace.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div ref=\"parent\">\r\n        <div class=\"bar_race\" id=\"barRace\"></div>\r\n        <SlideController :start-date=\"startDate\" :end-date=\"endDate\" :current-date=\"day\" @change=\"changeDate\" @playPause=\"playing = $event\"></SlideController>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n    /* eslint-disable */\r\n    import SlideController from './SlideController'\r\n    import {isDateValid} from '../js/locationUtils'\r\n    export default {\r\n        name: \"BarRace\",\r\n        components: {\r\n            SlideController\r\n        },\r\n        props: {\r\n            raceData: Array,\r\n            title: String,\r\n            subtitle: String,\r\n            source: String,\r\n            id:String,\r\n            changeLabelPosition: Boolean,\r\n            isRate: Boolean,\r\n            color: String,\r\n            mainDate: String\r\n        },\r\n        data:function () {\r\n            return {\r\n                width:500,\r\n                day:\"\",\r\n                playing: true,\r\n                startDate: \"\",\r\n                endDate: \"\",\r\n            }\r\n        },\r\n        created() {\r\n            // window.addEventListener(\"resize\", this.resizeEventHandler);\r\n        },\r\n        destroyed() {\r\n            // console.log(\"destoryed\");\r\n            // window.removeEventListener(\"resize\", this.resizeEventHandler);\r\n        },\r\n        methods: {\r\n            resizeEventHandler() {\r\n                if(this.$refs.parent){\r\n                    this.width = this.$refs.parent.clientWidth;\r\n                }\r\n                // this.width = window.innerWidth>510?510: window.innerWidth-55;\r\n                // console.log(this.width)\r\n            },\r\n            changeDate(e){\r\n                this.day = e;\r\n                this.emitDateChange(e)\r\n            },\r\n            emitDateChange(e){\r\n                this.$emit('dateChange', e)\r\n            }\r\n        },\r\n        mounted() {\r\n            const moment = require('moment');\r\n            this.resizeEventHandler();\r\n            this.startDate = this.raceData[0].day;\r\n            this.endDate = this.raceData[this.raceData.length-1].day;\r\n            const d3 = require('d3');\r\n            //ref https://gist.github.com/jrzief/70f1f8a5d066a286da3a1e699823470f NEED REFACTOR THO, no time yet\r\n            // Feel free to change or delete any of the code you see in this editor!\r\n            let svg = d3.select(\"#barRace\").append(\"svg\")\r\n                .attr(\"width\", this.width)\r\n                .attr(\"height\", 500);\r\n\r\n            let tickDuration = 1000;\r\n\r\n            let top_n = 12;\r\n            let height = 500;\r\n            let width = this.width;\r\n\r\n            const margin = {\r\n                top: 30,\r\n                right: 0,\r\n                bottom: 5,\r\n                left: 0\r\n            };\r\n\r\n            let barPadding = (height-(margin.bottom+margin.top))/(top_n*5);\r\n\r\n            // let title = svg.append('text')\r\n            //     .attr('class', 'title')\r\n            //     .attr('y', 24)\r\n            //     .html(this.title);\r\n            //\r\n            // let subTitle = svg.append(\"text\")\r\n            //     .attr(\"class\", \"subTitle\")\r\n            //     .attr(\"y\", 55)\r\n            //     .html(this.subtitle);\r\n\r\n            let caption = svg.append('text')\r\n                .attr('class', 'caption')\r\n                .attr('x', width)\r\n                .attr('y', height-5)\r\n                .style('text-anchor', 'end')\r\n                .html(\"©covid19track.site | Data ©JHU\");\r\n\r\n            this.day =  this.mainDate && isDateValid(this.mainDate, this.raceData[0].day, this.raceData[this.raceData.length-1].day ) ? this.mainDate :  this.raceData[0].day;\r\n\r\n            let totalString = this.$t('total');\r\n            let that = this;\r\n\r\n            function loadData(data) {\r\n                //if (error) throw error;\r\n\r\n                // console.log(data);\r\n\r\n                data.forEach(d => {\r\n                    d.value = +d.value,\r\n                        d.lastValue = d.lastValue<0? 0: +d.lastValue,\r\n                        d.value = isNaN(d.value) && d.value < 0 ? 0 : d.value,\r\n                        d.colour = that.color?that.color:\"#33CCFF\"\r\n                });\r\n\r\n                // console.log(data);\r\n\r\n                let daySlice = data.filter(d => d.day == that.day && !isNaN(d.value))\r\n                    .sort((a,b) => b.value - a.value)\r\n                    .slice(0, top_n);\r\n\r\n                daySlice.forEach((d,i) => d.rank = i);\r\n\r\n                // console.log('daySlice: ', daySlice)\r\n\r\n\r\n                const getClassName = (d)=>\"bar_\"+d.name.replace(/[^\\w]/g, \"_\");\r\n\r\n                const isTooSmall = (d)=>{\r\n                    let theBar = d3.select(`.${getClassName(d)}`);\r\n                    return theBar?.node()?.getBoundingClientRect().width < 100\r\n                };\r\n                const getOutsideWidth = (d) => x(d.value)+15+(d.value.toFixed(0)).length*10;\r\n\r\n                const getLabelX = (d)=>that.changeLabelPosition && isTooSmall(d)?getOutsideWidth(d): x(d.value)-8;\r\n                const getLabelAnchor = (d)=>that.changeLabelPosition && isTooSmall(d)?'start':'end';\r\n\r\n\r\n\r\n                let x = d3.scaleLinear()\r\n                    .domain([0, d3.max(daySlice, d => d.value)])\r\n                    .range([margin.left, width-margin.right-65]);\r\n\r\n                let y = d3.scaleLinear()\r\n                    .domain([top_n, 0])\r\n                    .range([height-margin.bottom, margin.top]);\r\n\r\n                let xAxis = d3.axisTop()\r\n                    .scale(x)\r\n                    .ticks(width > 500 ? 5:2)\r\n                    .tickSize(-(height-margin.top-margin.bottom))\r\n                    .tickFormat(d => d3.format(',')(d));\r\n\r\n                svg.append('g')\r\n                    .attr('class', 'axis xAxis')\r\n                    .attr('transform', `translate(0, ${margin.top})`)\r\n                    .call(xAxis)\r\n                    .selectAll('.tick line')\r\n                    .classed('origin', d => d == 0);\r\n\r\n                svg.selectAll('rect.bar')\r\n                    .data(daySlice, d => d.name)\r\n                    .enter()\r\n                    .append('rect')\r\n                    .attr('class', d =>  `bar ${getClassName(d)}`)\r\n                    .attr('x', x(0)+1)\r\n                    .attr('width', d => (x(d.value)-x(0)-1)<0?0:(x(d.value)-x(0)-1))\r\n                    .attr('y', d => y(d.rank)+5)\r\n                    .attr('height', y(1)-y(0)-barPadding)\r\n                    .style('fill', d => d.colour);\r\n\r\n                svg.selectAll('text.label')\r\n                    .data(daySlice, d => d.name)\r\n                    .enter()\r\n                    .append('text')\r\n                    .attr('class', 'label')\r\n                    .attr('x', d => getLabelX(d))\r\n                    .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1)\r\n                    .style('text-anchor',d =>  getLabelAnchor(d))\r\n                    .style('color', 'white')\r\n                    .html(d => d.name);\r\n\r\n                svg.selectAll('text.valueLabel')\r\n                    .data(daySlice, d => d.name)\r\n                    .enter()\r\n                    .append('text')\r\n                    .attr('class', 'valueLabel')\r\n                    .attr('x', d => x(d.value)+5)\r\n                    .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1)\r\n                    .text(d => d3.format(',.0f')(d.lastValue));\r\n\r\n                let dayText = svg.append('text')\r\n                    .attr('class', 'dayText')\r\n                    .attr('x', width-margin.right)\r\n                    .attr('y', height-60)\r\n                    .style('text-anchor', 'end')\r\n                    .html(that.day);\r\n                    // .call(halo, 10);\r\n\r\n                let totalText = svg.append('text')\r\n                    .attr('class', 'totalText')\r\n                    .attr('x', width-margin.right)\r\n                    .attr('y', height-30)\r\n                    .style('text-anchor', 'end')\r\n                    .html(totalString + \" - 0\");\r\n\r\n                let total = 0;\r\n\r\n                let ticker = d3.interval(e => {\r\n                    if(!that.playing) return;\r\n                    that.resizeEventHandler();\r\n\r\n                    daySlice = data.filter(d => d.day == that.day && !isNaN(d.value))\r\n                        .sort((a,b) => b.value - a.value);\r\n\r\n                    total = daySlice.reduce((accumulator, currentValue) => accumulator + currentValue.value, 0);\r\n\r\n                    if(that.isRate){\r\n                        totalText.text(d => \"Data Average - \" + d3.format(',.2f')(total/daySlice.length)+\"%\");\r\n                    }else {\r\n                        totalText.text(d => totalString + \" - \" + d3.format(',.0f')(total));\r\n                    }\r\n\r\n                    daySlice = daySlice.slice(0,top_n);\r\n\r\n                    daySlice.forEach((d,i) => d.rank = i);\r\n\r\n                    // console.log('Intervalday: ', daySlice);\r\n\r\n                    x.domain([0, d3.max(daySlice, d => d.value)]);\r\n\r\n                    svg.select('.xAxis')\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .call(xAxis);\r\n\r\n                    let bars = svg.selectAll('.bar').data(daySlice, d => d.name);\r\n\r\n                    bars\r\n                        .enter()\r\n                        .append('rect')\r\n                        .attr('class', d => `bar ${getClassName(d)}`)\r\n                        .attr('x', x(0)+1)\r\n                        .attr( 'width', d => (x(d.value)-x(0)-1)<0?0:(x(d.value)-x(0)-1))\r\n                        .attr('y', d => y(top_n+1)+5)\r\n                        .attr('height', y(1)-y(0)-barPadding)\r\n                        .style('fill', d => d.colour)\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .attr('y', d => y(d.rank)+5);\r\n\r\n                    bars\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .attr('width', d => (x(d.value)-x(0)-1)<0?0:(x(d.value)-x(0)-1))\r\n                        .attr('y', d => y(d.rank)+5);\r\n\r\n                    bars\r\n                        .exit()\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .attr('width', d => (x(d.value)-x(0)-1)<0?0:(x(d.value)-x(0)-1))\r\n                        .attr('y', d => y(top_n+1)+5)\r\n                        .remove();\r\n\r\n                    let labels = svg.selectAll('.label')\r\n                        .data(daySlice, d => d.name);\r\n\r\n\r\n\r\n                    labels\r\n                        .enter()\r\n                        .append('text')\r\n                        .attr('class', 'label')\r\n                        .attr('x', d => getLabelX(d))\r\n                        .attr('y', d => y(top_n+1)+5+((y(1)-y(0))/2))\r\n                        .style('text-anchor',  d => getLabelAnchor(d))\r\n                        .style('color', 'white')\r\n                        .html(d => d.name)\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1);\r\n\r\n\r\n                    labels\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .attr('x', d => getLabelX(d))\r\n                        .style('text-anchor',  d => getLabelAnchor(d))\r\n                        .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1);\r\n\r\n                    labels\r\n                        .exit()\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .attr('x', d => getLabelX(d))\r\n                        .style('text-anchor',  d => getLabelAnchor(d))\r\n                        .attr('y', d => y(top_n+1)+5)\r\n                        .remove();\r\n\r\n\r\n\r\n                    let valueLabels = svg.selectAll('.valueLabel').data(daySlice, d => d.name);\r\n\r\n                    valueLabels\r\n                        .enter()\r\n                        .append('text')\r\n                        .attr('class', 'valueLabel')\r\n                        .attr('x', d => x(d.value)+5)\r\n                        .attr('y', d => y(top_n+1)+5)\r\n                        .text(d => d3.format(',.0f')(d.lastValue))\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1);\r\n\r\n                    valueLabels\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .attr('x', d => x(d.value)+5)\r\n                        .attr('y', d => y(d.rank)+5+((y(1)-y(0))/2)+1)\r\n                        .tween(\"text\", function(d) {\r\n                            let i = d3.interpolateRound(d.lastValue, d.value);\r\n                            return function(t) {\r\n                                this.textContent = d3.format(',')(i(t));\r\n                            };\r\n                        });\r\n\r\n\r\n                    valueLabels\r\n                        .exit()\r\n                        .transition()\r\n                        .duration(tickDuration)\r\n                        .ease(d3.easeLinear)\r\n                        .attr('x', d => x(d.value)+5)\r\n                        .attr('y', d => y(top_n+1)+5)\r\n                        .remove();\r\n\r\n                    dayText.html(that.day);\r\n                    that.emitDateChange(that.day);\r\n\r\n                    let currentMoment = moment(that.day+' 2020', window.dateFormat + ' YYYY');\r\n                    let endMoment = moment(data[data.length-1].day+' 2020', window.dateFormat + ' YYYY');\r\n                    // day = d3.format('.1f')((+day) + 0.1);\r\n                    that.day = currentMoment.add(1, 'days').format(window.dateFormat);\r\n                    if(currentMoment.isAfter(endMoment)) that.day= data[0].day;\r\n                    // console.log(day)\r\n                    // console.log(day)\r\n                },tickDuration);\r\n\r\n            }\r\n            loadData(this.raceData);\r\n\r\n\r\n            // const halo = function(text, strokeWidth) {\r\n            //     text.select(function() { return this.parentNode.insertBefore(this.cloneNode(true), this); })\r\n            //         .style('fill', '#ffffff')\r\n            //         .style( 'stroke','#ffffff')\r\n            //         .style('stroke-width', strokeWidth)\r\n            //         .style('stroke-linejoin', 'round')\r\n            //         .style('opacity', 1);\r\n            //\r\n            // }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n    .bar_race text{\r\n        font-size: 16px;\r\n        font-family: Open Sans, sans-serif;\r\n    }\r\n    .bar_race text.title{\r\n        font-size: 24px;\r\n        font-weight: 500;\r\n    }\r\n    .bar_race text.subTitle{\r\n        font-weight: 500;\r\n        fill: #777777;\r\n    }\r\n    .bar_race text.totalText{\r\n        font-size: 23px;\r\n        font-weight: bold;\r\n        fill: #3d3d3d;\r\n    }\r\n    .bar_race text.caption{\r\n        font-weight: 400;\r\n        font-size: 14px;\r\n        fill: #777777;\r\n    }\r\n    .bar_race text.label{\r\n        color: white !important;\r\n        font-weight: 600;\r\n    }\r\n\r\n    .bar_race text.valueLabel{\r\n        font-weight: 300;\r\n    }\r\n\r\n    .bar_race text.dayText{\r\n        font-size: 64px;\r\n        font-weight: 700;\r\n        opacity: 0.25;\r\n    }\r\n    dayText{\r\n        font-size: 80px !important;\r\n        font-weight: 700;\r\n        opacity: 0.25;\r\n    }\r\n    .tick text {\r\n        fill: #777777;\r\n    }\r\n    .xAxis .tick:nth-child(2) text {\r\n        text-anchor: start;\r\n    }\r\n    .tick line {\r\n        shape-rendering: CrispEdges;\r\n        stroke: #dddddd;\r\n    }\r\n    .tick line.origin{\r\n        stroke: #aaaaaa;\r\n    }\r\n    path.domain{\r\n        display: none;\r\n    }\r\n</style>"],"sourceRoot":"src/components"}]}